<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>153</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>207</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>264</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>268</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>292</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>128</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>178</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>335</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>26</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>252</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>311</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>322</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>177</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>207</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>264</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>268</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>292</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>334</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>73</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><killingTest/><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>191</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/MonotoneSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/MonotoneSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/MonotoneSpline::interpolate</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>95</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/MonotoneSpline::interpolate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>interpolate</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>192</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/MonotoneSpline::interpolate</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>99</index><killingTest/><description>mutated return of Object value for com/github/sanity/pav/MonotoneSpline::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>MonotoneSpline.kt</sourceFile><mutatedClass>com.github.sanity.pav.spline.MonotoneSpline</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>98</index><killingTest/><description>removed call to kotlin/jvm/internal/Intrinsics::checkExpressionValueIsNotNull</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$Point::getWeight</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>getX</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$Point::getX</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$Point::getY</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>18</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double multiplication with division</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced double division with multiplication</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>merge</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$Point;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators$Point::merge to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$Point</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators$Point::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>funX</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><killingTest/><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/examples/GenerateGraphKt::funX</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><killingTest/><description>Replaced double subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><killingTest/><description>Replaced double multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><killingTest/><description>Replaced double addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><killingTest/><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>115</index><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE'><sourceFile>generateGraph.kt</sourceFile><mutatedClass>com.github.sanity.pav.examples.GenerateGraphKt</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>158</index><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>131</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>160</index><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>169</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$Companion::createFromList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>142</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::setNext</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Companion</mutatedClass><mutatedMethod>createFromList</mutatedMethod><methodDescription>(Ljava/util/List;)Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::setPrevious</description></mutation>
<mutation detected='false' status='SURVIVED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>getNext</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest/><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::getNext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>getPrevious</mutatedMethod><methodDescription>()Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::getPrevious to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::getValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>iterate</mutatedMethod><methodDescription>(Lkotlin/jvm/functions/Function1;)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>toArrayList</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList::toArrayList to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList</mutatedClass><mutatedMethod>toArrayList</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::iterate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Lcom/github/sanity/pav/PairAdjacentViolators$Point;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators$1::invoke to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Lcom/github/sanity/pav/PairAdjacentViolators$PAVMode;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>removed call to com/github/sanity/pav/PairSubstitutingDoublyLinkedList::iterate</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>getIsotonicPoints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators::getIsotonicPoints to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>interpolator</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$InterpolationStrategy;)Lkotlin/jvm/functions/Function1;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators::interpolator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators</mutatedClass><mutatedMethod>inverseInterpolator</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairAdjacentViolators$InterpolationStrategy;)Lkotlin/jvm/functions/Function1;</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairAdjacentViolators::inverseInterpolator to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$interpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$interpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$interpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>155</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$interpolator$1::invoke</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Cursor</mutatedClass><mutatedMethod>getNextValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor::getNextValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Cursor</mutatedClass><mutatedMethod>getPreviousValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$Cursor</mutatedClass><mutatedMethod>getPreviousValue</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor::getPreviousValue to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$inverseInterpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$inverseInterpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>106</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairAdjacentViolators.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$inverseInterpolator$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>155</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of double value with -(x + 1) for com/github/sanity/pav/PairAdjacentViolators$inverseInterpolator$1::invoke</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>Comparisons.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairAdjacentViolators$$special$$inlined$sortedBy$1</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)I</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED'><sourceFile>PairSubstitutingDoublyLinkedList.kt</sourceFile><mutatedClass>com.github.sanity.pav.PairSubstitutingDoublyLinkedList$toArrayList$1</mutatedClass><mutatedMethod>invoke</mutatedMethod><methodDescription>(Lcom/github/sanity/pav/PairSubstitutingDoublyLinkedList$Cursor;)Ljava/lang/Void;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><killingTest>com.github.sanity.pav.PairAdjacentViolatorsSpec.com.github.sanity.pav.PairAdjacentViolatorsSpec</killingTest><description>mutated return of Object value for com/github/sanity/pav/PairSubstitutingDoublyLinkedList$toArrayList$1::invoke to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
